OBJECT Page 9307 Purchase Order List
{
  OBJECT-PROPERTIES
  {
    Date=21/12/17;
    Time=12:18:45;
    Modified=Yes;
    Version List=NAVW110.00.00.16585,TC1.0,TA1.0;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Purchase Orders;
               ENG=Purchase Orders];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=CONST(Order));
    DataCaptionFields=Buy-from Vendor No.;
    PageType=List;
    CardPageID=Purchase Order;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Request Approval,Print,Category 6,Category 7,Total Communications;
                                ENG=New,Process,Report,Request Approval,Print,Category 6,Category 7,Total Communications];
    OnOpenPage=VAR
                 PurchasesPayablesSetup@1000 : Record 312;
               BEGIN
                 SetSecurityFilterOnRespCenter;

                 JobQueueActive := PurchasesPayablesSetup.JobQueueActive;

                 CopyBuyFromVendorFilter;
               END;

    OnFindRecord=BEGIN
                   EXIT(FIND(Which) AND ShowHeader);
                 END;

    OnNextRecord=VAR
                   NewStepCount@1000 : Integer;
                 BEGIN
                   REPEAT
                     NewStepCount := NEXT(Steps);
                   UNTIL (NewStepCount = 0) OR ShowHeader;

                   EXIT(NewStepCount);
                 END;

    OnAfterGetCurrRecord=BEGIN
                           SetControlAppearance;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1102601026;1 ;ActionGroup;
                      CaptionML=[ENU=O&rder;
                                 ENG=O&rder];
                      Image=Order }
      { 1102601035;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Suite;
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                               END;
                                }
      { 1102601028;2 ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenPurchaseOrderStatistics;
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ENG=Approvals];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ENG=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.];
                      ApplicationArea=#Suite;
                      PromotedIsBig=Yes;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 81022;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 1102601030;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 ENG=Documents];
                      Image=Documents }
      { 1102601031;2 ;Action    ;
                      CaptionML=[ENU=Receipts;
                                 ENG=Receipts];
                      ApplicationArea=#Suite;
                      RunObject=Page 145;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=PostedReceipts }
      { 1102601032;2 ;Action    ;
                      Name=PostedPurchaseInvoices;
                      CaptionML=[ENU=Invoices;
                                 ENG=Invoices];
                      ApplicationArea=#Suite;
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=Invoice;
                      OnAction=VAR
                                 DocumentFunctions@1000000000 : Codeunit 81001;
                               BEGIN
                                 DocumentFunctions.ShowPostedInvoice(Rec);
                               END;
                                }
      { 1102601033;2 ;Action    ;
                      Name=PostedPurchasePrepmtInvoices;
                      CaptionML=[ENU=Prepa&yment Invoices;
                                 ENG=Prepa&yment Invoices];
                      RunObject=Page 146;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentInvoice }
      { 1102601034;2 ;Action    ;
                      CaptionML=[ENU=Prepayment Credi&t Memos;
                                 ENG=Prepayment Credi&t Memos];
                      RunObject=Page 147;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentCreditMemo }
      { 1102601037;2 ;Separator  }
      { 8       ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ENG=Warehouse];
                      Image=Warehouse }
      { 1102601039;2 ;Action    ;
                      CaptionML=[ENU=In&vt. Put-away/Pick Lines;
                                 ENG=In&vt. Put-away/Pick Lines];
                      RunObject=Page 5774;
                      RunPageView=SORTING(Source Document,Source No.,Location Code);
                      RunPageLink=Source Document=CONST(Purchase Order),
                                  Source No.=FIELD(No.);
                      Image=PickLines }
      { 1102601038;2 ;Action    ;
                      CaptionML=[ENU=Whse. Receipt Lines;
                                 ENG=Whse. Receipt Lines];
                      RunObject=Page 7342;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(39),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=ReceiptLines }
      { 1102601040;2 ;Separator  }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000002;1 ;ActionGroup;
                      CaptionML=[ENU=Total Communications;
                                 ENG=Total Communications] }
      { 1000000003;2 ;Action    ;
                      Name=Open Email;
                      CaptionML=[ENU=Open Email;
                                 ENG=Open Email];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendMail;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 TotalCommunicationFunctions@1000000000 : Codeunit 91000;
                               BEGIN
                                 TotalCommunicationFunctions.RecordHandler(8,"No.",'',0,0D,0D,TRUE);
                               END;
                                }
      { 1000000000;2 ;Action    ;
                      Name=Send Email;
                      CaptionML=[ENU=Send Email;
                                 ENG=Send Email];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 TotalCommunicationFunctions@1000000000 : Codeunit 91000;
                                 MessageSent@1000000001 : TextConst 'ENU=Message has been sent!';
                               BEGIN
                                 TotalCommunicationFunctions.RecordHandler(8,"No.",'',0,0D,0D,FALSE);
                                 MESSAGE(MessageSent);
                               END;
                                }
      { 1000000001;2 ;Action    ;
                      Name=Queue Email;
                      CaptionML=[ENU=Queue Email;
                                 ENG=Queue Email];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MailSetup;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 TotalCommunicationFunctions@1000000000 : Codeunit 91000;
                                 MessageQueued@1000000001 : TextConst 'ENU=Message has been queued for sending!';
                               BEGIN
                                 TotalCommunicationFunctions.RecordHandler(8,"No.",'',0,0D,0D,FALSE);
                                 MESSAGE(MessageQueued);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Print;
                                 ENG=Print];
                      Image=Print }
      { 55      ;2   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      ToolTipML=[ENU=Prepare to print the document. The report request window for the document opens where you can specify what to include on the print-out.;
                                 ENG=Prepare to print the document. The report request window for the document opens where you can specify what to include on the print-out.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 PurchaseHeader@1000 : Record 38;
                               BEGIN
                                 PurchaseHeader := Rec;
                                 CurrPage.SETSELECTIONFILTER(PurchaseHeader);
                                 PurchaseHeader.PrintRecords(TRUE);
                               END;
                                }
      { 24      ;2   ;Action    ;
                      Name=Send;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Send;
                                 ENG=Send];
                      ToolTipML=[ENU=Prepare to send the document according to the vendor's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                                 ENG=Prepare to send the document according to the vendor's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendToMultiple;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 PurchaseHeader@1000 : Record 38;
                               BEGIN
                                 PurchaseHeader := Rec;
                                 CurrPage.SETSELECTIONFILTER(PurchaseHeader);
                                 PurchaseHeader.SendRecords;
                               END;
                                }
      { 10      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ENG=Release];
                      Image=ReleaseDoc }
      { 1102601021;2 ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 ENG=Re&lease];
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 1102601022;2 ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 ENG=Re&open];
                      ApplicationArea=#Suite;
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 1102601023;2 ;Separator  }
      { 1102601000;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 1102601025;2 ;Action    ;
                      AccessByPermission=TableData 410=R;
                      CaptionML=[ENU=Send IC Purchase Order;
                                 ENG=Send IC Purchase Order];
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutboxMgt@1000 : Codeunit 427;
                                 ApprovalsMgmt@1003 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   ICInOutboxMgt.SendPurchDoc(Rec,FALSE);
                               END;
                                }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENG=Request Approval] }
      { 1000000013;2 ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENG=Send A&pproval Request];
                      ToolTipML=[ENU=Send an approval request.;
                                 ENG=Send an approval request.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Visible=false;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 1000000012;2 ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 ENG=Cancel the approval request.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Visible=false;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 1000000011;2 ;Action    ;
                      CaptionML=[ENU=Send A&pproval Request;
                                 CYM=Anfon Cais am Gymeradwyaeth;
                                 ENG=Send A&pproval Request];
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalMgt@1001 : Codeunit 1535;
                                 LcduAppFunct@1000000001 : Codeunit 81000;
                                 LtxtError@1000000000 : Text;
                               BEGIN
                                 //IF ApprovalMgt.SendPurchaseApprovalRequest(Rec) THEN CurrPage.CLOSE;
                                 IF NOT LcduAppFunct.SubmitForApproval("Document Type","No.",LtxtError) THEN ERROR(LtxtError);
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1000000010;2 ;Action    ;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=Cancel;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalMgt@1001 : Codeunit 1535;
                                 LcduAppFunct@1000000001 : Codeunit 81000;
                                 LtxtError@1000000000 : Text;
                               BEGIN
                                 //IF ApprovalMgt.CancelPurchaseApprovalRequest(Rec,TRUE,TRUE) THEN;
                                 IF LcduAppFunct.CancelDocument(Rec,TRUE) THEN CurrPage.CLOSE;
                               END;
                                }
      { 12      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ENG=Warehouse];
                      Image=Warehouse }
      { 1102601015;2 ;Action    ;
                      AccessByPermission=TableData 7316=R;
                      CaptionML=[ENU=Create &Whse. Receipt;
                                 ENG=Create &Whse. Receipt];
                      Image=NewReceipt;
                      OnAction=VAR
                                 GetSourceDocInbound@1001 : Codeunit 5751;
                               BEGIN
                                 GetSourceDocInbound.CreateFromPurchOrder(Rec);

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 1102601016;2 ;Action    ;
                      AccessByPermission=TableData 7340=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Inventor&y Put-away/Pick;
                                 ENG=Create Inventor&y Put-away/Pick];
                      Image=CreatePutawayPick;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 1102601017;2 ;Separator  }
      { 50      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENG=P&osting];
                      Image=Post }
      { 51      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENG=Test Report];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 52      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=P&ost;
                                 ENG=P&ost];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SendToPosting(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 16      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENG=Preview Posting];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 ENG=Review the different types of entries that will be created when you post the document or journal.];
                      ApplicationArea=#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1001 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 53      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Print;
                                 ENG=Post and &Print];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SendToPosting(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Name=PostBatch;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 ENG=Post &Batch];
                      Promoted=Yes;
                      Image=PostBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purchase Orders",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=[ENU=Remove From Job Queue;
                                 ENG=Remove From Job Queue];
                      ApplicationArea=#Suite;
                      Visible=JobQueueActive;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the purchase document.;
                           ENG=Specifies the number of the purchase document.];
                ApplicationArea=#Suite;
                SourceExpr="No." }

    { 1000000008;2;Field  ;
                SourceExpr="Unapproved No." }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the vendor you buy from.;
                           ENG=Specifies the number of the vendor you buy from.];
                SourceExpr="Buy-from Vendor No." }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the order address code linked to the relevant vendor's order address.;
                           ENG=Specifies the order address code linked to the relevant vendor's order address.];
                SourceExpr="Order Address Code";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the vendor who delivers the items.;
                           ENG=Specifies the name of the vendor who delivers the items.];
                ApplicationArea=#Suite;
                SourceExpr="Buy-from Vendor Name" }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the compensation agreement identification number, sometimes referred to as the RMA No. (Returns Materials Authorization).;
                           ENG=Specifies the compensation agreement identification number, sometimes referred to as the RMA No. (Returns Materials Authorisation).];
                SourceExpr="Vendor Authorization No." }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the postal code of the address.;
                           ENG=Specifies the postcode of the address.];
                SourceExpr="Buy-from Post Code";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the country/region code of the address.;
                           ENG=Specifies the country/region code of the address.];
                SourceExpr="Buy-from Country/Region Code";
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                           ENG=Specifies the name of the person to contact about shipment of the item from this vendor.];
                SourceExpr="Buy-from Contact";
                Visible=FALSE }

    { 163 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor who is sending the invoice.;
                           ENG=Specifies the vendor who is sending the invoice.];
                SourceExpr="Pay-to Vendor No.";
                Visible=FALSE }

    { 161 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the vendor sending the invoice.;
                           ENG=Specifies the name of the vendor sending the invoice.];
                SourceExpr="Pay-to Name";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the postal code of the address.;
                           ENG=Specifies the postcode of the address.];
                SourceExpr="Pay-to Post Code";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the country/region code of the address.;
                           ENG=Specifies the country/region code of the address.];
                SourceExpr="Pay-to Country/Region Code";
                Visible=FALSE }

    { 151 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                           ENG=Specifies the name of the person to contact about an invoice from this vendor.];
                SourceExpr="Pay-to Contact";
                Visible=FALSE }

    { 147 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a ship-to code if you want a different shipment address from the one that has been automatically entered.;
                           ENG=Specifies a ship-to code if you want a different shipment address from the one that has been automatically entered.];
                SourceExpr="Ship-to Code";
                Visible=FALSE }

    { 145 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the company at the address to which you want the items to be shipped.;
                           ENG=Specifies the name of the company at the address to which you want the items to be shipped.];
                SourceExpr="Ship-to Name";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the postal code of the address.;
                           ENG=Specifies the postcode of the address.];
                SourceExpr="Ship-to Post Code";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the country/region code of the address.;
                           ENG=Specifies the country/region code of the address.];
                SourceExpr="Ship-to Country/Region Code";
                Visible=FALSE }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of a contact person for the address where the items should be shipped.;
                           ENG=Specifies the name of a contact person for the address where the items should be shipped.];
                SourceExpr="Ship-to Contact";
                Visible=FALSE }

    { 131 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the purchase document will be recorded.;
                           ENG=Specifies the date when the posting of the purchase document will be recorded.];
                ApplicationArea=#Suite;
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 113 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1.;
                           ENG=Specifies the code for Shortcut Dimension 1.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 111 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2.;
                           ENG=Specifies the code for Shortcut Dimension 2.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 115 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                           ENG=Specifies a code for the location where you want the items to be placed when they are received.];
                SourceExpr="Location Code" }

    { 99  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which purchaser is assigned to the vendor.;
                           ENG=Specifies which purchaser is assigned to the vendor.];
                ApplicationArea=#Suite;
                SourceExpr="Purchaser Code";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           ENG=Specifies the ID of the user who is responsible for the document.];
                SourceExpr="Assigned User ID" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the currency of the amounts on the purchase lines.;
                           ENG=Specifies the code of the currency of the amounts on the purchase lines.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1102601001;2;Field  ;
                ToolTipML=[ENU=Specifies the date of the vendor's invoice.;
                           ENG=Specifies the date of the vendor's invoice.];
                ApplicationArea=#Suite;
                SourceExpr="Document Date" }

    { 1102601003;2;Field  ;
                ToolTipML=[ENU=Specifies whether the record is open, waiting to be approved, invoiced for prepayment, or released to the next stage of processing.;
                           ENG=Specifies whether the record is open, waiting to be approved, invoiced for prepayment, or released to the next stage of processing.];
                SourceExpr=Status;
                Visible=FALSE }

    { 1102601005;2;Field  ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document.;
                           ENG=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document.];
                ApplicationArea=#Suite;
                SourceExpr="Payment Terms Code";
                Visible=FALSE }

    { 1102601007;2;Field  ;
                ToolTipML=[ENU=Specifies when the purchase invoice is due for payment.;
                           ENG=Specifies when the purchase invoice is due for payment.];
                ApplicationArea=#Suite;
                SourceExpr="Due Date";
                Visible=FALSE }

    { 1102601009;2;Field  ;
                ToolTipML=[ENU=Specifies the payment discount percent granted if payment is made on or before the date in the Pmt. Discount Date field.;
                           ENG=Specifies the payment discount percent granted if payment is made on or before the date in the Pmt. Discount Date field.];
                SourceExpr="Payment Discount %";
                Visible=FALSE }

    { 1102601011;2;Field  ;
                ToolTipML=[ENU=Specifies how payment for the purchase document must be submitted.;
                           ENG=Specifies how payment for the purchase document must be submitted.];
                ApplicationArea=#Suite;
                SourceExpr="Payment Method Code";
                Visible=FALSE }

    { 1102601013;2;Field  ;
                ToolTipML=[ENU=Specifies the code that represents the shipment method for this purchase.;
                           ENG=Specifies the code that represents the shipment method for this purchase.];
                SourceExpr="Shipment Method Code";
                Visible=FALSE }

    { 1102601027;2;Field  ;
                ToolTipML=[ENU=Specifies the date that you want the vendor to deliver to the ship-to address. The value in the field is used to calculate the latest date you can order the items to have them delivered on the requested receipt date. If you do not need delivery on a specific date, you can leave the field blank.;
                           ENG=Specifies the date that you want the vendor to deliver to the ship-to address. The value in the field is used to calculate the latest date you can order the items to have them delivered on the requested receipt date. If you do not need delivery on a specific date, you can leave the field blank.];
                ApplicationArea=#Suite;
                SourceExpr="Requested Receipt Date";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of a job queue entry that handles the posting of purchase orders.;
                           ENG=Specifies the status of a job queue entry that handles the posting of purchase orders.];
                ApplicationArea=#Suite;
                SourceExpr="Job Queue Status";
                Visible=JobQueueActive }

    { 20  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=Amount }

    { 22  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr="Amount Including VAT" }

    { 1000000004;2;Field  ;
                SourceExpr="Amount Received" }

    { 1000000005;2;Field  ;
                SourceExpr="Amount Invoiced" }

    { 1000000006;2;Field  ;
                SourceExpr="Committed Amount (LCY)" }

    { 1000000007;2;Field  ;
                SourceExpr="Amt.Rcd. Not Invoiced" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 14  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Suite;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1901138007;1;Part   ;
                ApplicationArea=#Suite;
                SubPageLink=No.=FIELD(Buy-from Vendor No.),
                            Date Filter=FIELD(Date Filter);
                PagePartID=Page9093;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ReportPrint@1102601001 : Codeunit 228;
      JobQueueActive@1003 : Boolean INDATASET;
      OpenApprovalEntriesExist@1002 : Boolean;
      CanCancelApprovalForRecord@1001 : Boolean;
      SkipLinesWithoutVAT@1000 : Boolean;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1000 : Codeunit 1535;
    BEGIN
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);

      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    PROCEDURE SkipShowingLinesWithoutVAT@2();
    BEGIN
      SkipLinesWithoutVAT := TRUE;
    END;

    LOCAL PROCEDURE ShowHeader@6() : Boolean;
    VAR
      CashFlowManagement@1000 : Codeunit 841;
    BEGIN
      IF NOT SkipLinesWithoutVAT THEN
        EXIT(TRUE);

      EXIT(CashFlowManagement.GetTaxAmountFromPurchaseOrder(Rec) <> 0);
    END;

    BEGIN
    END.
  }
}

