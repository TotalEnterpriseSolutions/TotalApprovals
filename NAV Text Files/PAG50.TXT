OBJECT Page 50 Purchase Order
{
  OBJECT-PROPERTIES
  {
    Date=11/10/17;
    Time=13:48:52;
    Modified=Yes;
    Version List=NAVW110.00.00.16585,NAVGB10.00.00.16585,TC1.0,TA1.0;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Order;
               ENG=Purchase Order];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Release,Posting,Prepare,Invoice,Request Approval,Print;
                                ENG=New,Process,Report,Approve,Release,Posting,Prepare,Invoice,Request Approval,Print];
    OnInit=VAR
             PurchasesPayablesSetup@1000 : Record 312;
           BEGIN
             JobQueueUsed := PurchasesPayablesSetup.JobQueueActive;
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=BEGIN
                 SetDocNoVisible;

                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;
               END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetPurchasesFilter;

                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetBuyFromVendorFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetControlAppearance;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 61      ;1   ;ActionGroup;
                      CaptionML=[ENU=O&rder;
                                 ENG=O&rder];
                      Image=Order }
      { 129     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Suite;
                      Promoted=No;
                      Enabled="No." <> '';
                      PromotedIsBig=No;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenPurchaseOrderStatistics;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENG=Card];
                      ToolTipML=[ENU=View or change detailed information about the vendor.;
                                 ENG=View or change detailed information about the vendor.];
                      ApplicationArea=#Suite;
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=EditLines }
      { 53      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ENG=Approvals];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ENG=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.];
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 65      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 ENG=Documents];
                      Image=Documents }
      { 66      ;2   ;Action    ;
                      CaptionML=[ENU=Receipts;
                                 ENG=Receipts];
                      ApplicationArea=#Suite;
                      RunObject=Page 145;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Image=PostedReceipts }
      { 67      ;2   ;Action    ;
                      CaptionML=[ENU=Invoices;
                                 ENG=Invoices];
                      ApplicationArea=#Suite;
                      RunObject=Page 146;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=Invoice }
      { 205     ;2   ;Action    ;
                      Name=PostedPrepaymentInvoices;
                      CaptionML=[ENU=Prepa&yment Invoices;
                                 ENG=Prepa&yment Invoices];
                      RunObject=Page 146;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentInvoice }
      { 206     ;2   ;Action    ;
                      Name=PostedPrepaymentCrMemos;
                      CaptionML=[ENU=Prepayment Credi&t Memos;
                                 ENG=Prepayment Credi&t Memos];
                      RunObject=Page 147;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentCreditMemo }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ENG=Warehouse];
                      Image=Warehouse }
      { 181     ;2   ;Separator  }
      { 180     ;2   ;Action    ;
                      CaptionML=[ENU=In&vt. Put-away/Pick Lines;
                                 ENG=In&vt. Put-away/Pick Lines];
                      RunObject=Page 5774;
                      RunPageView=SORTING(Source Document,Source No.,Location Code);
                      RunPageLink=Source Document=CONST(Purchase Order),
                                  Source No.=FIELD(No.);
                      Image=PickLines }
      { 148     ;2   ;Action    ;
                      CaptionML=[ENU=Whse. Receipt Lines;
                                 ENG=Whse. Receipt Lines];
                      RunObject=Page 7342;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(39),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=ReceiptLines }
      { 182     ;2   ;Separator  }
      { 183     ;2   ;ActionGroup;
                      CaptionML=[ENU=Dr&op Shipment;
                                 ENG=Dr&op Shipment];
                      Image=Delivery }
      { 226     ;3   ;Action    ;
                      Name=Warehouse_GetSalesOrder;
                      CaptionML=[ENU=Get &Sales Order;
                                 ENG=Get &Sales Order];
                      ToolTipML=[ENU="Select the sales order that must be linked to the purchase order, for drop shipment. ";
                                 ENG="Select the sales order that must be linked to the purchase order, for drop shipment. "];
                      ApplicationArea=#Suite;
                      RunObject=Codeunit 76;
                      Image=Order }
      { 227     ;2   ;ActionGroup;
                      CaptionML=[ENU=Speci&al Order;
                                 ENG=Speci&al Order];
                      Image=SpecialOrder }
      { 228     ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=[ENU=Get &Sales Order;
                                 ENG=Get &Sales Order];
                      Image=Order;
                      OnAction=VAR
                                 PurchHeader@1000 : Record 38;
                                 DistIntegration@1001 : Codeunit 5702;
                               BEGIN
                                 PurchHeader.COPY(Rec);
                                 DistIntegration.GetSpecialOrders(PurchHeader);
                                 Rec := PurchHeader;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000002;1 ;ActionGroup;
                      CaptionML=[ENU=Total Communications;
                                 ENG=Total Communications] }
      { 1000000003;2 ;Action    ;
                      Name=Open Email;
                      CaptionML=[ENU=Open Email;
                                 ENG=Open Email];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendMail;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 TotalCommunicationFunctions@1000000000 : Codeunit 91000;
                               BEGIN
                                 TotalCommunicationFunctions.RecordHandler(8,"No.",'',0,0D,0D,TRUE);
                               END;
                                }
      { 1000000000;2 ;Action    ;
                      Name=Send Email;
                      CaptionML=[ENU=Send Email;
                                 ENG=Send Email];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 TotalCommunicationFunctions@1000000000 : Codeunit 91000;
                                 MessageSent@1000000001 : TextConst 'ENU=Message has been sent!';
                               BEGIN
                                 TotalCommunicationFunctions.RecordHandler(8,"No.",'',0,0D,0D,FALSE);
                                 MESSAGE(MessageSent);
                               END;
                                }
      { 1000000001;2 ;Action    ;
                      Name=Queue Email;
                      CaptionML=[ENU=Queue Email;
                                 ENG=Queue Email];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MailSetup;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 TotalCommunicationFunctions@1000000000 : Codeunit 91000;
                                 MessageQueued@1000000001 : TextConst 'ENU=Message has been queued for sending!';
                               BEGIN
                                 TotalCommunicationFunctions.RecordHandler(8,"No.",'',0,0D,0D,FALSE);
                                 MESSAGE(MessageQueued);
                               END;
                                }
      { 37      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 ENG=Approval] }
      { 35      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 ENG=Approve];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 ENG=Approve the requested changes.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ENG=Reject];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 ENG=Delegate];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 ENG=Comments];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ENG=Release];
                      Image=ReleaseDoc }
      { 73      ;2   ;Separator  }
      { 137     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 ENG=Re&lease];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 138     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 ENG=Re&open];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed;
                                 ENG=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 611     ;2   ;Separator  }
      { 68      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 69      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 ENG=Calculate &Invoice Discount];
                      ToolTipML=[ENU=Calculate the discount that can be granted based on all lines in the purchase document.;
                                 ENG=Calculate the discount that can be granted based on all lines in the purchase document.];
                      ApplicationArea=#Suite;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 190     ;2   ;Separator  }
      { 179     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get St&d. Vend. Purchase Codes;
                                 ENG=Get St&d. Vend. Purchase Codes];
                      ApplicationArea=#Suite;
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 75      ;2   ;Separator  }
      { 70      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENG=Copy Document];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 142     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 ENG=Move Negative Lines];
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 225     ;2   ;ActionGroup;
                      CaptionML=[ENU=Dr&op Shipment;
                                 ENG=Dr&op Shipment];
                      Image=Delivery }
      { 184     ;3   ;Action    ;
                      Name=Functions_GetSalesOrder;
                      CaptionML=[ENU=Get &Sales Order;
                                 ENG=Get &Sales Order];
                      ToolTipML=[ENU="Select the sales order that must be linked to the purchase order, for drop shipment. ";
                                 ENG="Select the sales order that must be linked to the purchase order, for drop shipment. "];
                      ApplicationArea=#Suite;
                      RunObject=Codeunit 76;
                      Image=Order }
      { 186     ;2   ;ActionGroup;
                      CaptionML=[ENU=Speci&al Order;
                                 ENG=Speci&al Order];
                      Image=SpecialOrder }
      { 187     ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=[ENU=Get &Sales Order;
                                 ENG=Get &Sales Order];
                      Image=Order;
                      OnAction=VAR
                                 PurchHeader@1000 : Record 38;
                                 DistIntegration@1001 : Codeunit 5702;
                               BEGIN
                                 PurchHeader.COPY(Rec);
                                 DistIntegration.GetSpecialOrders(PurchHeader);
                                 Rec := PurchHeader;
                               END;
                                }
      { 173     ;2   ;Action    ;
                      Name=Archive Document;
                      CaptionML=[ENU=Archi&ve Document;
                                 ENG=Archi&ve Document];
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchivePurchDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 195     ;2   ;Action    ;
                      AccessByPermission=TableData 410=R;
                      CaptionML=[ENU=Send IC Purchase Order;
                                 ENG=Send IC Purchase Order];
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutboxMgt@1000 : Codeunit 427;
                                 ApprovalsMgmt@1003 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   ICInOutboxMgt.SendPurchDoc(Rec,FALSE);
                               END;
                                }
      { 189     ;2   ;Separator  }
      { 51      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 ENG=Incoming Document];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 47      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 ENG=View Incoming Document];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document, for example for auditing purposes;
                                 ENG=View any incoming document records and file attachments that exist for the entry or document, for example for auditing purposes];
                      ApplicationArea=#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 45      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 ENG=Select Incoming Document];
                      ToolTipML=;
                      ApplicationArea=#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 43      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 ENG=Create Incoming Document from File];
                      ToolTipML=[ENU=Create an incoming document from a file that you select from the disk. The file will be attached to the incoming document record.;
                                 ENG=Create an incoming document from a file that you select from the disk. The file will be attached to the incoming document record.];
                      ApplicationArea=#Suite;
                      Enabled=CreateIncomingDocumentEnabled;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 ENG=Remove Incoming Document];
                      ToolTipML=;
                      ApplicationArea=#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENG=Request Approval] }
      { 57      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENG=Send A&pproval Request];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 ENG=Cancel the approval request.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 17      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ENG=Warehouse];
                      Image=Warehouse }
      { 149     ;2   ;Action    ;
                      AccessByPermission=TableData 7316=R;
                      CaptionML=[ENU=Create &Whse. Receipt;
                                 ENG=Create &Whse. Receipt];
                      Image=NewReceipt;
                      OnAction=VAR
                                 GetSourceDocInbound@1001 : Codeunit 5751;
                               BEGIN
                                 GetSourceDocInbound.CreateFromPurchOrder(Rec);

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 150     ;2   ;Action    ;
                      AccessByPermission=TableData 7340=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Inventor&y Put-away/Pick;
                                 ENG=Create Inventor&y Put-away/Pick];
                      Promoted=Yes;
                      Image=CreateInventoryPickup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 74      ;2   ;Separator  }
      { 77      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENG=P&osting];
                      Image=Post }
      { 79      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=P&ost;
                                 ENG=P&ost];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENG=Preview Posting];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 ENG=Review the different types of entries that will be created when you post the document or journal.];
                      ApplicationArea=#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 80      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Print;
                                 ENG=Post and &Print];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 78      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENG=Test Report];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 81      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 ENG=Post &Batch];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purchase Orders",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      CaptionML=[ENU=Remove From Job Queue;
                                 ENG=Remove From Job Queue];
                      ApplicationArea=#Suite;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 201     ;2   ;Separator  }
      { 209     ;2   ;ActionGroup;
                      CaptionML=[ENU=Prepa&yment;
                                 ENG=Prepa&yment];
                      Image=Prepayment }
      { 202     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Prepayment Test &Report;
                                 ENG=Prepayment Test &Report];
                      Image=PrepaymentSimulation;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeaderPrepmt(Rec);
                               END;
                                }
      { 203     ;3   ;Action    ;
                      Name=PostPrepaymentInvoice;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post Prepayment &Invoice;
                                 ENG=Post Prepayment &Invoice];
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtInvoiceYN(Rec,FALSE);
                               END;
                                }
      { 210     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and Print Prepmt. Invoic&e;
                                 ENG=Post and Print Prepmt. Invoic&e];
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtInvoiceYN(Rec,TRUE);
                               END;
                                }
      { 204     ;3   ;Action    ;
                      Name=PostPrepaymentCreditMemo;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post Prepayment &Credit Memo;
                                 ENG=Post Prepayment &Credit Memo];
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtCrMemoYN(Rec,FALSE);
                               END;
                                }
      { 211     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and Print Prepmt. Cr. Mem&o;
                                 ENG=Post and Print Prepmt. Cr. Mem&o];
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtCrMemoYN(Rec,TRUE);
                               END;
                                }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[ENU=Print;
                                 ENG=Print];
                      Image=Print }
      { 82      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      ToolTipML=[ENU=Prepare to print the document. The report request window for the document opens where you can specify what to include on the print-out.;
                                 ENG=Prepare to print the document. The report request window for the document opens where you can specify what to include on the print-out.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Category10;
                      OnAction=VAR
                                 PurchaseHeader@1000 : Record 38;
                               BEGIN
                                 PurchaseHeader := Rec;
                                 CurrPage.SETSELECTIONFILTER(PurchaseHeader);
                                 PurchaseHeader.PrintRecords(TRUE);
                               END;
                                }
      { 22      ;2   ;Action    ;
                      Name=SendCustom;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Send;
                                 ENG=Send];
                      ToolTipML=[ENU=Prepare to send the document according to the vendor's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                                 ENG=Prepare to send the document according to the vendor's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendToMultiple;
                      PromotedCategory=Category10;
                      OnAction=VAR
                                 PurchaseHeader@1000 : Record 38;
                               BEGIN
                                 PurchaseHeader := Rec;
                                 CurrPage.SETSELECTIONFILTER(PurchaseHeader);
                                 PurchaseHeader.SendRecords;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a general ledger account, item, additional cost, or fixed asset, depending on what you selected in the Type field.;
                           ENG=Specifies the number of a general ledger account, item, additional cost, or fixed asset, depending on what you selected in the Type field.];
                ApplicationArea=#Suite;
                SourceExpr="No.";
                Importance=Promoted;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor No.";
                OnValidate=BEGIN
                             IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
                               IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
                                 SETRANGE("Buy-from Vendor No.");

                             CurrPage.UPDATE;
                           END;
                            }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Vendor;
                           ENG=Vendor];
                ToolTipML=[ENU=Specifies detailed information about the vendor on the selected purchase document.;
                           ENG=Specifies detailed information about the vendor on the selected purchase document.];
                ApplicationArea=#Suite;
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
                               IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
                                 SETRANGE("Buy-from Vendor No.");

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE }

    { 1000000089;2;Field  ;
                SourceExpr=Barcode;
                OnValidate=BEGIN
                             //TES001
                           END;
                            }

    { 62  ;2   ;Group     ;
                CaptionML=[ENU=Buy-from;
                           ENG=Buy-from];
                GroupType=Group }

    { 89  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the vendor's buy-from address.;
                           ENG=Specifies the vendor's buy-from address.];
                ApplicationArea=#Suite;
                SourceExpr="Buy-from Address";
                Importance=Additional }

    { 91  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the vendor's buy-from address.;
                           ENG=Specifies an additional part of the vendor's buy-from address.];
                ApplicationArea=#Suite;
                SourceExpr="Buy-from Address 2";
                Importance=Additional }

    { 1040002;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                SourceExpr="Buy-from County" }

    { 76  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ApplicationArea=#Suite;
                SourceExpr="Buy-from Post Code";
                Importance=Additional }

    { 93  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ApplicationArea=#Suite;
                SourceExpr="Buy-from City";
                Importance=Additional }

    { 174 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENG=Contact No.];
                SourceExpr="Buy-from Contact No.";
                Importance=Additional }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ApplicationArea=#Suite;
                SourceExpr="Buy-from Contact" }

    { 49  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date of the vendor's invoice.;
                           ENG=Specifies the date of the vendor's invoice.];
                ApplicationArea=#Suite;
                SourceExpr="Document Date" }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the posting date of the record.;
                           ENG=Specifies the posting date of the record.];
                ApplicationArea=#Suite;
                SourceExpr="Posting Date";
                Importance=Additional }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the purchase invoice is due for payment.;
                           ENG=Specifies when the purchase invoice is due for payment.];
                ApplicationArea=#Suite;
                SourceExpr="Due Date";
                Importance=Additional }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's own invoice number.;
                           ENG=Specifies the vendor's own invoice number.];
                ApplicationArea=#Suite;
                SourceExpr="Vendor Invoice No.";
                Visible=false;
                ShowMandatory=VendorInvoiceNoMandatory }

    { 1000000004;2;Field  ;
                SourceExpr="Posting Description" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which purchaser is associated with the order.;
                           ENG=Specifies which purchaser is associated with the order.];
                ApplicationArea=#Suite;
                SourceExpr="Purchaser Code";
                Importance=Additional;
                OnValidate=BEGIN
                             PurchaserCodeOnAfterValidate;
                           END;
                            }

    { 171 ;2   ;Field     ;
                SourceExpr="No. of Archived Versions";
                Importance=Additional }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the item is ordered. It is calculated backwards from the Planned Receipt Date field in combination with the Lead Time Calculation field.;
                           ENG=Specifies the date when the item is ordered. It is calculated backwards from the Planned Receipt Date field in combination with the Lead Time Calculation field.];
                ApplicationArea=#Suite;
                SourceExpr="Order Date";
                Importance=Additional }

    { 237 ;2   ;Field     ;
                SourceExpr="Quote No.";
                Importance=Additional }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's order number.;
                           ENG=Specifies the vendor's order number.];
                ApplicationArea=#Suite;
                SourceExpr="Vendor Order No.";
                Importance=Additional }

    { 18  ;2   ;Field     ;
                SourceExpr="Vendor Shipment No." }

    { 96  ;2   ;Field     ;
                SourceExpr="Order Address Code";
                Importance=Additional }

    { 131 ;2   ;Field     ;
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 72  ;2   ;Field     ;
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 133 ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted }

    { 7   ;2   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueueUsed }

    { 60  ;1   ;Part      ;
                Name=PurchLines;
                ApplicationArea=#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page54;
                PartType=Page;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           ENG=Invoice Details];
                GroupType=Group }

    { 119 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the purchase document.;
                           ENG=Specifies the currency of amounts on the purchase document.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU="Specifies the date you expect the items to be available in your warehouse. If you leave the field blank, it will be calculated as follows: Planned Receipt Date + Safety Lead Time + Inbound Warehouse Handling Time = Expected Receipt Date.";
                           ENG="Specifies the date you expect the items to be available in your warehouse. If you leave the field blank, it will be calculated as follows: Planned Receipt Date + Safety Lead Time + Inbound Warehouse Handling Time = Expected Receipt Date."];
                ApplicationArea=#Suite;
                SourceExpr="Expected Receipt Date";
                Importance=Promoted }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENG=Specifies whether the unit price on the line should be displayed including or excluding VAT.];
                ApplicationArea=#Suite;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 191 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which VAT business posting group was used when the VAT entry was posted.;
                           ENG=Specifies which VAT business posting group was used when the VAT entry was posted.];
                ApplicationArea=#Suite;
                SourceExpr="VAT Bus. Posting Group" }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents the payment terms that apply to the purchase order.;
                           ENG=Specifies the code that represents the payment terms that apply to the purchase order.];
                ApplicationArea=#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 117 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how payment for the purchase document must be submitted.;
                           ENG=Specifies how payment for the purchase document must be submitted.];
                ApplicationArea=#Suite;
                SourceExpr="Payment Method Code";
                Importance=Additional }

    { 56  ;2   ;Field     ;
                SourceExpr="Transaction Type" }

    { 100 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 102 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 38  ;2   ;Field     ;
                SourceExpr="Payment Discount %" }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date on which the amount in the purchase order must be paid for the order to qualify for a payment discount.;
                           ENG=Specifies the last date on which the amount in the purchase order must be paid for the order to qualify for a payment discount.];
                ApplicationArea=#Suite;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 104 ;2   ;Field     ;
                SourceExpr="Location Code";
                Importance=Promoted }

    { 52  ;2   ;Field     ;
                SourceExpr="Shipment Method Code" }

    { 27  ;2   ;Field     ;
                SourceExpr="Payment Reference" }

    { 25  ;2   ;Field     ;
                SourceExpr="Creditor No." }

    { 106 ;2   ;Field     ;
                SourceExpr="On Hold" }

    { 144 ;2   ;Field     ;
                SourceExpr="Inbound Whse. Handling Time";
                Importance=Additional }

    { 146 ;2   ;Field     ;
                SourceExpr="Lead Time Calculation";
                Importance=Additional }

    { 127 ;2   ;Field     ;
                SourceExpr="Requested Receipt Date" }

    { 139 ;2   ;Field     ;
                SourceExpr="Promised Receipt Date" }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer that the items are shipped to directly from your vendor, as a drop shipment.;
                           ENG=Specifies the number of the customer that the items are shipped to directly from your vendor, as a drop shipment.];
                ApplicationArea=#Suite;
                SourceExpr="Sell-to Customer No.";
                Importance=Additional }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Payment;
                           ENG=Shipping and Payment];
                GroupType=Group }

    { 83  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           ENG=Ship-to];
                GroupType=Group }

    { 85  ;3   ;Field     ;
                CaptionML=[ENU=Code;
                           ENG=Code];
                ApplicationArea=#Suite;
                SourceExpr="Ship-to Code" }

    { 42  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ApplicationArea=#Suite;
                SourceExpr="Ship-to Name";
                Importance=Additional }

    { 44  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the vendor's buy-from address.;
                           ENG=Specifies the vendor's buy-from address.];
                ApplicationArea=#Suite;
                SourceExpr="Ship-to Address";
                Importance=Additional }

    { 46  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the vendor's buy-from address.;
                           ENG=Specifies an additional part of the vendor's buy-from address.];
                ApplicationArea=#Suite;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 1040010;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                SourceExpr="Ship-to County" }

    { 109 ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ApplicationArea=#Suite;
                SourceExpr="Ship-to Post Code";
                Importance=Additional }

    { 48  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ApplicationArea=#Suite;
                SourceExpr="Ship-to City";
                Importance=Additional }

    { 50  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ApplicationArea=#Suite;
                SourceExpr="Ship-to Contact";
                Importance=Additional }

    { 71  ;2   ;Group     ;
                CaptionML=[ENU=Pay-to;
                           ENG=Pay-to];
                GroupType=Group }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ApplicationArea=#Suite;
                SourceExpr="Pay-to Name";
                Importance=Promoted }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the vendor's buy-from address.;
                           ENG=Specifies the vendor's buy-from address.];
                ApplicationArea=#Suite;
                SourceExpr="Pay-to Address";
                Importance=Additional }

    { 28  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the vendor's buy-from address.;
                           ENG=Specifies an additional part of the vendor's buy-from address.];
                ApplicationArea=#Suite;
                SourceExpr="Pay-to Address 2";
                Importance=Additional }

    { 1040006;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                SourceExpr="Pay-to County" }

    { 97  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ApplicationArea=#Suite;
                SourceExpr="Pay-to Post Code";
                Importance=Additional }

    { 30  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ApplicationArea=#Suite;
                SourceExpr="Pay-to City";
                Importance=Additional }

    { 176 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENG=Contact No.];
                SourceExpr="Pay-to Contact No.";
                Importance=Additional }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ApplicationArea=#Suite;
                SourceExpr="Pay-to Contact";
                Importance=Additional }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           ENG=Foreign Trade] }

    { 115 ;2   ;Field     ;
                SourceExpr="Transaction Specification" }

    { 58  ;2   ;Field     ;
                SourceExpr="Transport Method" }

    { 111 ;2   ;Field     ;
                SourceExpr="Entry Point" }

    { 113 ;2   ;Field     ;
                SourceExpr=Area }

    { 1900201301;1;Group  ;
                CaptionML=[ENU=Prepayment;
                           ENG=Prepayment] }

    { 197 ;2   ;Field     ;
                SourceExpr="Prepayment %";
                Importance=Promoted;
                OnValidate=BEGIN
                             Prepayment37OnAfterValidate;
                           END;
                            }

    { 199 ;2   ;Field     ;
                SourceExpr="Compress Prepayment" }

    { 215 ;2   ;Field     ;
                SourceExpr="Prepmt. Payment Terms Code" }

    { 212 ;2   ;Field     ;
                SourceExpr="Prepayment Due Date";
                Importance=Promoted }

    { 217 ;2   ;Field     ;
                SourceExpr="Prepmt. Payment Discount %" }

    { 196 ;2   ;Field     ;
                SourceExpr="Prepmt. Pmt. Discount Date" }

    { 207 ;2   ;Field     ;
                SourceExpr="Vendor Cr. Memo No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 23  ;1   ;Part      ;
                ApplicationArea=#Suite;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903326807;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9090;
                ProviderID=60;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9093;
                Visible=FALSE;
                PartType=Page }

    { 1904651607;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9094;
                PartType=Page }

    { 39  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1903435607;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9095;
                PartType=Page }

    { 1906949207;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9096;
                Visible=FALSE;
                PartType=Page }

    { 3   ;1   ;Part      ;
                ApplicationArea=#Suite;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9100;
                ProviderID=60;
                PartType=Page }

    { 59  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#Suite;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopyPurchDoc@1002 : Report 492;
      MoveNegPurchLines@1006 : Report 6698;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1005 : Codeunit 5700;
      ArchiveManagement@1007 : Codeunit 5063;
      PurchCalcDiscByType@1009 : Codeunit 66;
      ChangeExchangeRate@1001 : Page 511;
      JobQueueVisible@1000 : Boolean INDATASET;
      JobQueueUsed@1004 : Boolean INDATASET;
      HasIncomingDocument@1012 : Boolean;
      DocNoVisible@1008 : Boolean;
      VendorInvoiceNoMandatory@1010 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1011 : Boolean;
      OpenApprovalEntriesExist@1014 : Boolean;
      ShowWorkflowStatus@1013 : Boolean;
      CanCancelApprovalForRecord@1015 : Boolean;
      DocumentIsPosted@1016 : Boolean;
      OpenPostedPurchaseOrderQst@1017 : TextConst 'ENU=The order has been posted and moved to the Posted Purchase Invoices window.\\Do you want to open the posted invoice?;ENG=The order has been posted and moved to the Posted Purchase Invoices window.\\Do you want to open the posted invoice?';
      CreateIncomingDocumentEnabled@1018 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PurchaseHeader@1001 : Record 38;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      SendToPosting(PostingCodeunitID);

      DocumentIsPosted := NOT PurchaseHeader.GET("Document Type","No.");

      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Purch.-Post (Yes/No)" THEN
        EXIT;

      IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
        ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE Prepayment37OnAfterValidate@19040510();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::Order,"No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorInvoiceNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      CreateIncomingDocumentEnabled := (NOT HasIncomingDocument) AND ("No." <> '');
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17();
    VAR
      OrderPurchaseHeader@1003 : Record 38;
      PurchInvHeader@1000 : Record 122;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      IF NOT OrderPurchaseHeader.GET("Document Type","No.") THEN BEGIN
        PurchInvHeader.SETRANGE("No.","Last Posting No.");
        IF PurchInvHeader.FINDFIRST THEN
          IF InstructionMgt.ShowConfirm(OpenPostedPurchaseOrderQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
            PAGE.RUN(PAGE::"Posted Purchase Invoice",PurchInvHeader);
      END;
    END;

    BEGIN
    {
      TES001 27-07-2017 Added <Barcode>
    }
    END.
  }
}

